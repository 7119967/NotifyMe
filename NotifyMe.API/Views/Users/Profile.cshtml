@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
}
@model ProfileViewModel
@{
    ViewBag.Title = "Profile";
    Layout = "_Layout";
    // bool subcribeExist = false;
}
<h2>Profile of @Model.UserName</h2>
<hr/>
     <div class="col-md-4" style="padding-top: 15px;">
            <span style="text-align: center;">
                <img class="rounded-circle" src="@Model.Avatar" alt="@Model.UserName" style="width: 100px; height: 100px;display: block;margin: auto;">
            </span>
        </div>
<form>
    <div class="mb-3">
        <label asp-for="UserName" class="control-label" style="font-size: 20px;"></label>
        <input type="text" class="form-control" id="UserName" value="@Model.UserName">
    </div>
    <div class="mb-3">
        <label asp-for="FirstName" class="control-label"></label>
        <input type="text" class="form-control" id="FirstName" value="@Model.FirstName">
    </div>
    <div class="mb-3">
        <label asp-for="LastName" class="control-label"></label>
        <input type="text" class="form-control" id="LastName" value="@Model.LastName">
    </div>
    <div class="mb-3">
        <label asp-for="Email" class="control-label"></label>
        <input type="text" class="form-control" id="Email" value="@Model.Email">
    </div>
    <div class="mb-3">
        <label asp-for="PhoneNumber" class="control-label"></label>
        <input type="text" class="form-control" id="PhoneNumber" value="@Model.PhoneNumber">
    </div>
    <div class="mb-3">
        <label asp-for="Info" class="control-label"></label>
        <textarea class="form-control" id="Info" rows="3" value="@Model.Info"></textarea>
    </div>
    @if (UserManager.GetUserId(User) == Model.Id)
    {
        <div class="col-6">
            <a class="btn btn-outline-primary"
               asp-action="Edit"
               asp-controller="Users"
               asp-route-idCurrentUser="@Model.Id">
                Edit profile
            </a>
        </div>
    }
</form>

<div class="row mt-5 mb-2">
    @{
        // await Html.RenderPartialAsync("PartialViews/PostsViewablePartialView");
        Html.Hidden("Id", Model.Id);
    }
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function unsubcribing(idSubscribe, idCurrentUser) {
        
        }
        
        function subcribing(idSubscribe, idCurrentUser) {
        
        }
        
        function deleting(idPost, UserId) {
        
        }

        function editing(idCurrentUser) {
            $.ajax({
                url: '@Url.Action("Edit", "Users")',
                type: 'GET',
                data: { 'idCurrentUser': idCurrentUser },
            });
        }
    </script>
}